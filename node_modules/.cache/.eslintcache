[{"/home/erison/GitHub/typescript-rickdex/src/index.tsx":"1","/home/erison/GitHub/typescript-rickdex/src/App.tsx":"2","/home/erison/GitHub/typescript-rickdex/src/hooks/useFetch.ts":"3","/home/erison/GitHub/typescript-rickdex/src/components/CharacterCard.tsx":"4","/home/erison/GitHub/typescript-rickdex/src/styles/CharacterCardStyle.ts":"5","/home/erison/GitHub/typescript-rickdex/src/styles/Home.ts":"6"},{"size":219,"mtime":1641403595781,"results":"7","hashOfConfig":"8"},{"size":899,"mtime":1641408994300,"results":"9","hashOfConfig":"8"},{"size":828,"mtime":1641403545604,"results":"10","hashOfConfig":"8"},{"size":681,"mtime":1641408789827,"results":"11","hashOfConfig":"8"},{"size":626,"mtime":1641409112047,"results":"12","hashOfConfig":"8"},{"size":301,"mtime":1641409031504,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"vih0gp",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/erison/GitHub/typescript-rickdex/src/index.tsx",[],["28","29"],"/home/erison/GitHub/typescript-rickdex/src/App.tsx",[],"/home/erison/GitHub/typescript-rickdex/src/hooks/useFetch.ts",["30"],"import * as React from 'react';\n\nexport interface IuseFetchProps {\n    loading: Boolean\n    error: Boolean\n    data: any\n}\n\nexport function useFetch(url: string) {\n    \n    const [data, setData] = React.useState<any>()\n    const [loading, setLoading] = React.useState(false)\n    const [error, setError] = React.useState(false)\n\n    const fetchApi = () => {\n        setError(false)\n        setLoading(true)\n        fetch(url)\n            .then(response => response.json())\n            .then(data => \n                setData(data)\n            )\n            .catch(error => {\n                console.log(error)\n                setError(true)\n            })\n        .finally(() => setLoading(false))\n    }\n\n    React.useEffect(() => {\n        fetchApi();\n    }, []);\n\n    return {\n        loading,\n        error,\n        data\n  }\n}\n","/home/erison/GitHub/typescript-rickdex/src/components/CharacterCard.tsx",["31","32"],"/home/erison/GitHub/typescript-rickdex/src/styles/CharacterCardStyle.ts",[],"/home/erison/GitHub/typescript-rickdex/src/styles/Home.ts",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":32,"column":8,"nodeType":"39","endLine":32,"endColumn":10,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":15,"column":49,"nodeType":"43","messageId":"44","endLine":15,"endColumn":51},{"ruleId":"45","severity":1,"message":"46","line":21,"column":9,"nodeType":"47","endLine":21,"endColumn":50},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.","ArrayExpression",["50"],"@typescript-eslint/no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [fetchApi]",{"range":"53","text":"54"},[758,760],"[fetchApi]"]