{"ast":null,"code":"var _jsxFileName = \"/home/erison/GitHub/typescript-rickdex/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFetch } from './hooks/useFetch';\nimport { CharacterCard } from './components/CharacterCard';\nimport { Container } from './styles/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useFetch('https://rickandmortyapi.com/api/character');\n  const character = data === null || data === void 0 ? void 0 : data.results;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rickdex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: character === null || character === void 0 ? void 0 : character.map(character => /*#__PURE__*/_jsxDEV(CharacterCard, {\n        name: character.name,\n        species: character.species,\n        gender: character.gender,\n        image: character.image,\n        status: character.status,\n        id: character.id\n      }, character.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"SqaY6md58AbHVB3nP5c+96D0Ef4=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/erison/GitHub/typescript-rickdex/src/App.tsx"],"names":["useFetch","CharacterCard","Container","App","loading","error","data","character","results","map","name","species","gender","image","status","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAA8BC,aAA9B,QAAmD,4BAAnD;AACA,SAASC,SAAT,QAAiC,eAAjC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAAC,2CAAD,CAAzC;AAEA,QAAMO,SAAS,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,OAAxB;AAEA,MAAIJ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE;AAAA,4BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,SAAD;AAAA,gBACGE,SADH,aACGA,SADH,uBACGA,SAAS,CAAEE,GAAX,CAAeF,SAAS,iBACvB,QAAC,aAAD;AAEE,QAAA,IAAI,EAAEA,SAAS,CAACG,IAFlB;AAGE,QAAA,OAAO,EAAEH,SAAS,CAACI,OAHrB;AAIE,QAAA,MAAM,EAAEJ,SAAS,CAACK,MAJpB;AAKE,QAAA,KAAK,EAAEL,SAAS,CAACM,KALnB;AAME,QAAA,MAAM,EAAEN,SAAS,CAACO,MANpB;AAOE,QAAA,EAAE,EAAEP,SAAS,CAACQ;AAPhB,SACOR,SAAS,CAACQ,EADjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAmBD;;GA5BQZ,G;UAE0BH,Q;;;KAF1BG,G;AA8BT,eAAeA,GAAf","sourcesContent":["import { useFetch } from './hooks/useFetch';\nimport { ICharacterCardProps, CharacterCard } from './components/CharacterCard';\nimport { Container, Title } from './styles/Home'\n\nfunction App() {\n\n  const { loading, error, data } = useFetch('https://rickandmortyapi.com/api/character')\n\n  const character = data?.results as ICharacterCardProps[]\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error!</p>\n\n  return (\n    <>\n      \n    <h1>Rickdex</h1>\n    <Container>\n      {character?.map(character =>\n        <CharacterCard\n          key={character.id}\n          name={character.name}\n          species={character.species}\n          gender={character.gender}\n          image={character.image}\n          status={character.status}\n          id={character.id}\n        />\n      )}\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}